{
  "openapi": "3.1.0",
  "info": {
    "title": "Zuddl API Documentation",
    "description": "Zuddl RESTful APIs let you interact with the Zuddl platform and take action for your event or webinar. They let you add attendees, get attendee details, get event details, and more.\n\nThe API response is returned in JSON, which your systems can easily consume.\n\nThe API parameters allow you to customize the response using filters, sorting, pagination, and other parameters.\n\n# Rate limits\n\n| Metrics | Value |\n| --- | --- |\n| Requests/second | 10 |\n| Burst or no. of concurrent calls allowed | 100 requests |\n| Total quota | 10000 requests/day |",
    "version": "1.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "org.events.app.domain.api_product.event.Event": {
        "properties": {
          "kind": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the event",
            "example": "h826a64f-807-4289-9024-9a120792c3d8"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the organization",
            "example": "h826a64f-807-4289-9024-9a120792c3d8"
          },
          "name": {
            "type": "string",
            "description": "Name of the event",
            "example": "Huddle with zuddl."
          },
          "teamName": {
            "type": "string",
            "description": "TeamName of the event",
            "example": "General"
          },
          "description": {
            "type": "string",
            "description": "Description of the event",
            "example": "join us to learn more about zuddl."
          },
          "identifier": {
            "type": "string",
            "description": "Identifier of the event",
            "example": "event-123"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "startDate of the event",
            "example": "2025-04-11T12:30:00Z"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "endDate of the event",
            "example": "2025-04-11T12:30:00Z"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the event",
            "example": "UTC/IST"
          },
          "status": {
            "type": "string",
            "description": "Status of the event",
            "enum": ["UPCOMING", "ONGOING", "CANCELED", "COMPLETED"],
            "example": "UPCOMING/ONGOING"
          },
          "type": {
            "type": "string",
            "description": "Type of the event",
            "enum": ["EVENT", "FIELD_EVENT", "WEBINAR", "THIRD_PARTY_EVENT"],
            "example": "WEBINAR/FIELD_EVENT/EVENT"
          },
          "eventFormat": {
            "type": "string",
            "description": "Format of the event",
            "enum": ["VIRTUAL", "IN_PERSON", "HYBRID"],
            "example": "VIRTUAL/IN_PERSON/HYBRID"
          },
          "websiteUrl": {
            "type": "string",
            "description": "websiteUrl of the event",
            "example": "https://app.zuddl.com/org/event"
          },
          "parentEventId": {
            "type": "string",
            "format": "uuid",
            "description": "parentEventId of the event",
            "example": "h826a64f-807-4289-9024-9a120792c3d8"
          },
          "location": {
            "$ref": "#/components/schemas/org.events.app.domain.api_product.event.Event-EventLocation",
            "description": "location of the event"
          },
          "virtualEventUrl": {
            "type": "string",
            "description": "virtualEventUrl of the event",
            "example": "https://zuddl.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "createdAt of the event",
            "example": "2025-04-11T12:30:00Z"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "description": "createdBy of the event",
            "example": "h826a64f-807-4289-9024-9a120792c3d8"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "updatedAt of the event",
            "example": "2025-04-11T12:30:00Z"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "description": "updatedBy of the event",
            "example": "h826a64f-807-4289-9024-9a120792c3d8"
          }
        }
      },
      "org.events.app.domain.api_product.event.Event-EventLocation": {
        "properties": {
          "venue": { "type": "string", "description": "venue of the event" },
          "address": {
            "$ref": "#/components/schemas/org.events.app.domain.api_product.event.Event-EventLocation-EventLocationAddress",
            "description": "address of the event"
          },
          "coordinates": {
            "$ref": "#/components/schemas/org.events.app.domain.api_product.event.Event-EventLocation-Coordinates",
            "description": "coordinates of the event"
          },
          "mapUrl": {
            "type": "string",
            "description": "mapUrl of the event",
            "example": "https://www.google.com/maps/place/?q=place_id:ChIJ_Q8bfYdGXj4Rz1s_sFHJqcA"
          }
        }
      },
      "org.events.app.domain.api_product.event.Event-EventLocation-Coordinates": {
        "properties": {
          "latitude": {
            "type": "string",
            "description": "latitude of the event address",
            "example": 24.4194509
          },
          "longitude": {
            "type": "string",
            "description": "longitude of the event",
            "example": 27.4194509
          }
        }
      },
      "org.events.app.domain.api_product.event.Event-EventLocation-EventLocationAddress": {
        "properties": {
          "address": { "type": "string", "description": "venue of the event" },
          "addressLine2": {
            "type": "string",
            "description": "addressLine2 of the event"
          },
          "stateProvince": {
            "type": "string",
            "description": "stateProvince of the event"
          },
          "postalCode": {
            "type": "string",
            "description": "postalCode of the event"
          },
          "country": { "type": "string", "description": "country of the event" }
        }
      },
      "org.events.app.domain.webhooks.EventCreatedWebhookRequestDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the webhook request",
            "example": "65b17030-05e9-441f-aab4-436bfa3279e8"
          },
          "type": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" },
          "data": {
            "$ref": "#/components/schemas/org.events.app.domain.api_product.event.Event"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "description": "Provide your API key secret in the `Authorization` header",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "webhooks": {
    "event.created": {
      "post": {
        "tags": ["EventWebhooks"],
        "summary": "New event created",
        "description": "This webhook is triggered when a new event is created in the system.",
        "operationId": "event.created",
        "parameters": [
          {
            "name": "X-Webhook-Signature",
            "in": "header",
            "description": "Signature to verify the webhook request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Information about a new event in the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/org.events.app.domain.webhooks.EventCreatedWebhookRequestDTO",
                "description": "Webhook payload for new event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "poll.created": {
      "post": {
        "tags": ["PollWebhooks"],
        "summary": "New poll created",
        "description": "This webhook is triggered when a new poll is created in the system.",
        "operationId": "poll.created",
        "parameters": [
          {
            "name": "X-Webhook-Signature",
            "in": "header",
            "description": "Signature to verify the webhook request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Information about a new poll in the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/org.events.app.domain.webhooks.EventCreatedWebhookRequestDTO",
                "description": "Webhook payload for new poll"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  }
}
